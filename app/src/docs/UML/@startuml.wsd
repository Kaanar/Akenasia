@startuml Akenasia
left to right direction

package Game {
  Historique <|-- HistoriqueDialog
  PositionTable <|-- Historique
  Chronometre <|-- PositionTable
  CoupsLimites <|-- PositionTable
  GamemodeFactory <|-- CoupsLimites
  GamemodeFactory <|-- Chronometre
  Gamemode <|-- GamemodeFactory
}

package OpenWorld {
  OpenWorld <|-- Bag
  OpenWorld <|-- MarkerDialog
  OpenWorld <|-- Item
  Item <|-- ListItems
  ListItems <|-- ItemAdapter
  OpenWorld <|-- Personnage
  PersonnageTable <|-- Personnage
  Personnage <|-- ItemDialog
  ItemDialog <|-- ItemTypeAdapter
}

class Chronometre {
  chronometre : CHRONOMETER
  pos : POSITION
  place : PLACE
  googleMap : GOOGLEMAP
  dbHandler : DATASABASEHANDLER
  i : INTEGER
  onMapReady(map: GOOGLEMAP)
  Chronometre()
  nouvelEssai()
}

class Place {
  placeId : INTEGER
  placeName : STRING
  placeLat : DOUBLE
  placeLong : DOUBLE
  Place()
}

class Database {
  saveRecord()
  orderRecord()
  viewRecord()
  deleteRecord()
}

class Position {
  latitude : DOUBLE
  longitude : DOUBLE
  Position()
  refreshLocation()
  calcul_distance() : DOUBLE
}

interface MyListAdapter {
  getView()
}

class Gamemode {
  Gamemode()
}

class CoupsLimites {
  essais : INTEGER
  pos : POSITION
  place : PLACE
  dbHandler : DATASABASEHANDLER
  i : INTEGER
  lastDistance : DOUBLE
  CoupsLimites()
  nouvelEssai()
}

class PositionTable {
  posId : INTEGER
  posLat : DOUBLE
  posLong : DOUBLE
  partieId : INTEGER
}

class Historique {
  partieId : INTEGER
  googleMap : GOOGLEMAP
  onMapReady(map: GOOGLEMAP)
  onInfoWindowClick(marker: MARKER) 
  updateTitle(marker: MARKER) : STRING
  updateInfo(marker: MARKER) : STRING
}

class DatabaseHandler {
  addRecord()
  viewRecord()
  updateRecord()
  deleteRecord()
}

class HistoriqueDialog {
  title : STRING
  info : STRING
  setTitle()
  setInfo()
}

class MarkerDialog {
  title : STRING
  info : STRING
  dbHandler : DATASABASEHANDLER
  attaque()
  fuite()
}

class Item {
  itemId : INTEGER
  itemName : STRING
  itemDesc : STRING
  itemAtt : DOUBLE
  itemDef : DOUBLE
  Item()
}

class PersonnageTable {
  persoId : INTEGER
  persoHp : DOUBLE
  persoAtt : DOUBLE
  persoDef : DOUBLE
  armure : INTEGER
  bouclier : INTEGER
  epee : INTEGER
  chaussures : INTEGER
  Personnage()
}

class Personnage {
  dbHandler : DATASABASEHANDLER
  currentPersonnage : PERSONNAGETABLE
  armure()
  bouclier()
  epee()
  chaussures()
  retirer()
}

interface ItemAdapter {
  getView()
}

interface GamemodeFactory {
  googleMap : GOOGLEMAP
  pos : POSITION
  dbHandler : DATASABASEHANDLER
  place : PLACE
  i : INTEGER
}

enum ListItems {
  EPEE
  CHAUSSURES
  ARMURE
  BOUCLIER
}

class ItemDialog {
  viewItem() 
}

class Bag {
  item : ARRAYLIST<ITEM>
  dbHandler : DATASABASEHANDLER
  viewRecord()
  orderRecord()
  onItemClick()
}

interface ItemTypeAdapter {
  getView()
}

class OpenWorld {
  pos : POSITION
  cameraFocus : BOOLEAN
  isPlay : BOOLEAN
  googleMap : GOOGLEMAP
  chronometre : CHRONOMETER
  listMarker : ARRAYLIST<LATLNG>
  dbHandler : DATASABASEHANDLER
  spawnTime : DOUBLE
  randomLat : DOUBLE
  randomLong : DOUBLE
  cameraSwitch()
  onMapReady(map: GOOGLEMAP)
  onMarkerClickListener(marker: MARKER)
  dropItem(index: INTEGER)
  randomColor(index: INTEGER)
  distanceMarker(marker: LATLNG) : DOUBLE
  viewMarker()
}

Interface PlaceAdapter {
  getView()
}

Database <|-- MyListAdapter
DatabaseHandler <|-- Database
Place <|-- Database
Position <|-- Place
Place <|-- Gamemode
GamemodeFactory <|-- Chronometre
GamemodeFactory <|-- CoupsLimites
Chronometre <|-- PositionTable
CoupsLimites <|-- PositionTable
PositionTable <|-- Historique
OpenWorld <|-- MarkerDialog
Gamemode <|-- OpenWorld
OpenWorld <|-- Item
Item <|-- ItemAdapter
Gamemode <|-- GamemodeFactory 
OpenWorld <|-- Personnage
Historique <|-- HistoriqueDialog
ListItems <|-- Item
PersonnageTable <|-- Personnage
DatabaseHandler <|-- CoupsLimites
DatabaseHandler <|-- Chronometre
DatabaseHandler <|-- OpenWorld
Personnage <|-- ItemDialog
OpenWorld <|-- Bag
ItemDialog <|-- ItemTypeAdapter
Place <|-- PlaceAdapter


@enduml